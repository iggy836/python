# 週間気温管理プログラム

1週間の最高気温データから、最も暑かった日を特定するプログラムを作成してください。

## 問題説明

- 月曜日から日曜日までの7日間の最高気温データが与えられます。
- 各日の最高気温は改行区切りで入力されます。
- 最も気温が高かった日の気温を出力してください。

## 入力例
```24
26
28
25
27
23
24```

## 出力例
```28```
## 補足

- 入力される気温は整数値です。
- 気温の範囲は -10℃ から 40℃ までです。
- 入力は必ず7行あります。

## サンプルプログラム解答例
# 7日分の気温データを入力として受け取る
temperatures = []
for i in range(7):
    temp = int(input())
    temperatures.append(temp)

# 最高気温を求める
max_temp = max(temperatures)

# 結果を出力
print(max_temp)
この問題は元の問題と同様の考え方で解けますが、以下の点が異なります：

- データ数が4つから7つに増えています。
- 最低気温ではなく最高気温を求めます。
- 1週間という具体的な期間を設定しています。
- 初心者の方が学習しやすいように、実際の気象データを扱うような現実的なシナリオを想定しました。


7日間の最高気温を求めるプログラムの解説 🌡️
プログラムの目的
7日間の気温データを入力として受け取り、その中から最高気温を見つけて表示するプログラムです。
コードの完全版
コードの詳しい解説
1. データの入力部分
まず空のtemperatures（気温）リストを作ります
forループで7回繰り返します
input()でユーザーからキーボード入力を受け取ります
int()で入力された文字列を数値に変換します
append()で入力された気温をリストに追加します
2. 最高気温を見つける部分
max()関数を使って、リストの中の最大値（最高気温）を見つけます
その結果をmax_tempという変数に保存します
3. 結果の表示部分
f-string（フォーマット文字列）を使って結果を表示します
{max_temp}の部分に、実際の最高気温の値が入ります
使用例 📝
入力
出力
まとめ
このプログラムでは以下の重要な Python の概念を学ぶことができます：
リストの使い方
forループの基本
ユーザーからの入力の受け取り方
文字列から数値への変換
リストの最大値を求める方法
f-stringを使った文字列フォーマット
初心者の方でも、これらの基本的な概念を理解することで、より複雑なプログラムへの第一歩となります